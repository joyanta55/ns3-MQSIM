# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('MQsim', ['core'])
    module.source = [
        'model/MQsim.cc',
        'helper/MQsim-helper.cc',
        'model/host/host_check.cc',
        'model/utils/XMLWriter.cpp',
        'model/utils/StringTools.cpp',
        'model/utils/RandomGenerator.cpp',
        'model/utils/Logical_Address_Partitioning_Unit.cpp',
        'model/utils/Helper_Functions.cpp',
        'model/utils/CMRRandomGenerator.cpp',
        'model/sim/Engine.cpp',
        'model/sim/EventTree.cpp',
        'model/nvm_chip/flash_memory/Block.cpp',
        'model/nvm_chip/flash_memory/Die.cpp',
        'model/nvm_chip/flash_memory/Flash_Chip.cpp',
        'model/nvm_chip/flash_memory/Physical_Page_Address.cpp',
        'model/nvm_chip/flash_memory/Plane.cpp',
        'model/ssd/User_Request.cpp',
        'model/ssd/Address_Mapping_Unit_Page_Level.cpp',
        'model/ssd/TSU_FLIN.cpp',
        'model/ssd/Data_Cache_Flash.cpp',
        'model/ssd/Data_Cache_Manager_Base.cpp',
        'model/ssd/Flash_Block_Manager_Base.cpp',
        'model/ssd/Queue_Probe.cpp',
        'model/ssd/Stats.cpp',
        'model/ssd/NVM_Transaction_Flash.cpp',
        'model/ssd/NVM_Transaction_Flash_WR.cpp',
        'model/ssd/NVM_Transaction_Flash_RD.cpp',
        'model/ssd/NVM_Transaction_Flash_ER.cpp',
        'model/ssd/NVM_PHY_ONFI.cpp',
        'model/ssd/NVM_PHY_ONFI_NVDDR2.cpp',
        'model/ssd/ONFI_Channel_NVDDR2.cpp',
        'model/ssd/ONFI_Channel_Base.cpp',
        'model/ssd/NVM_PHY_Base.cpp',
        'model/ssd/TSU_Base.cpp',
        'model/ssd/Flash_Transaction_Queue.cpp',
        'model/ssd/NVM_Firmware.cpp',
        'model/ssd/TSU_OutofOrder.cpp',
        'model/ssd/TSU_Priority_OutOfOrder.cpp',
        'model/ssd/GC_and_WL_Unit_Base.cpp',
        'model/ssd/GC_and_WL_Unit_Page_Level.cpp',
        'model/ssd/Address_Mapping_Unit_Base.cpp',
        'model/ssd/Address_Mapping_Unit_Hybrid.cpp',
        'model/ssd/Data_Cache_Manager_Flash_Advanced.cpp',
        'model/ssd/Data_Cache_Manager_Flash_Simple.cpp',
        'model/ssd/Flash_Block_Manager.cpp',
        'model/ssd/FTL.cpp',
        'model/ssd/Host_Interface_Base.cpp',
        'model/ssd/Host_Interface_NVMe.cpp',
        'model/ssd/Host_Interface_SATA.cpp',
       	'model/host/SATA_HBA.cpp',
       	'model/host/PCIe_Switch.cpp',
       	'model/host/PCIe_Root_Complex.cpp',
       	'model/host/PCIe_Link.cpp',
       	'model/host/IO_Flow_Trace_Based.cpp',
       	'model/host/IO_Flow_Synthetic.cpp',
       	'model/host/IO_Flow_Base.cpp',
       	'model/exec/SSD_Device.cpp',
       	'model/exec/Host_System.cpp',
       	'model/exec/IO_Flow_Parameter_Set.cpp',
       	'model/exec/Host_Parameter_Set.cpp',
       	'model/exec/Flash_Parameter_Set.cpp',
       	'model/exec/Device_Parameter_Set.cpp',
       	'model/exec/Execution_Parameter_Set.cpp',
        #'model/host/PCIe_Link.cpp',
        #'model/host/PCIe_Root_Complex.cpp',
        #'model/host/PCIe_Root_Complex.cpp',
        
        ]

    module_test = bld.create_ns3_module_test_library('MQsim')
    module_test.source = [
        'test/MQsim-test-suite.cc',
        ]
    # Tests encapsulating example programs should be listed here
    if (bld.env['ENABLE_EXAMPLES']):
        module_test.source.extend([
        #    'test/MQsim-examples-test-suite.cc',
             ])

    headers = bld(features='ns3header')
    headers.module = 'MQsim'
    headers.source = [
        'model/MQsim.h',
        'helper/MQsim-helper.h',
        'model/host/host_check.h',
        'model/utils/XMLWriter.h',
        'model/utils/Workload_Statistics.h',
        'model/utils/StringTools.h',
        'model/utils/RandomGenerator.h',
        'model/utils/CMRRandomGenerator.h',
        'model/utils/DistributionTypes.h',
        'model/utils/Helper_Functions.h',
        'model/utils/Logical_Address_Partitioning_Unit.h',
        'model/utils/rapidxml/rapidxml_iterators.hpp',
        'model/utils/rapidxml/rapidxml_print.hpp',
        'model/utils/rapidxml/rapidxml_utils.hpp',
        'model/utils/rapidxml/rapidxml.hpp',
        'model/host/SATA_HBA.h',
        'model/host/Host_IO_Request.h',
        'model/host/IO_Flow_Base.h',
        'model/host/IO_Flow_Synthetic.h',
        'model/host/IO_Flow_Trace_Based.h',
        'model/host/PCIe_Link.h',
        'model/host/PCIe_Message.h',
        'model/host/PCIe_Root_Complex.h',
        'model/host/PCIe_Switch.h',
        'model/host/Host_Defs.h',
        'model/sim/Sim_Reporter.h',
        'model/sim/Sim_Object.h',
        'model/sim/Sim_Event.h',
        'model/sim/Sim_Defs.h',
        'model/sim/EventTree.h',
        'model/sim/Engine.h',
        'model/nvm_chip/NVM_Memory_Address.h',
        'model/nvm_chip/NVM_Types.h',
        'model/nvm_chip/NVM_Chip.h',
        'model/nvm_chip/flash_memory/Block.h',
        'model/nvm_chip/flash_memory/Die.h',
        'model/nvm_chip/flash_memory/Flash_Chip.h',
        'model/nvm_chip/flash_memory/Flash_Command.h',
        'model/nvm_chip/flash_memory/FlashTypes.h',
        'model/nvm_chip/flash_memory/Page.h',
        'model/nvm_chip/flash_memory/Physical_Page_Address.h',
        'model/nvm_chip/flash_memory/Plane.h',
        'model/host/ASCII_Trace_Definition.h' ,
        'model/host/Host_Defs.h',
        'model/host/Host_IO_Request.h',
        'model/host/IO_Flow_Base.h',
        'model/host/IO_Flow_Synthetic.h',
        'model/host/IO_Flow_Trace_Based.h',
        'model/host/PCIe_Link.h',
        'model/host/PCIe_Message.h',
        'model/host/PCIe_Root_Complex.h',
        'model/host/PCIe_Switch.h',
        'model/host/SATA_HBA.h',
        'model/ssd/Address_Mapping_Unit_Base.h',
        'model/ssd/Address_Mapping_Unit_Hybrid.h',
        'model/ssd/Address_Mapping_Unit_Page_Level.h',
        'model/ssd/Data_Cache_Flash.h',
        'model/ssd/Data_Cache_Manager_Base.h',
        'model/ssd/Data_Cache_Manager_Flash_Advanced.h',
        'model/ssd/Data_Cache_Manager_Flash_Simple.h',
        'model/ssd/Flash_Block_Manager.h',
        'model/ssd/Flash_Block_Manager_Base.h',
        'model/ssd/Flash_Transaction_Queue.h',
        'model/ssd/FTL.h',
        'model/ssd/GC_and_WL_Unit_Base.h',
        'model/ssd/GC_and_WL_Unit_Page_Level.h',
        'model/ssd/Host_Interface_Base.h',
        'model/ssd/Host_Interface_Defs.h',
        'model/ssd/Host_Interface_NVMe_Priorities.h',
        'model/ssd/Host_Interface_NVMe.h',
        'model/ssd/Host_Interface_SATA.h',
        'model/ssd/NVM_Channel_Base.h',
        'model/ssd/NVM_Firmware.h',
        'model/ssd/NVM_PHY_Base.h',
        'model/ssd/NVM_PHY_ONFI_NVDDR2.h',
        'model/ssd/NVM_PHY_ONFI.h',
        'model/ssd/NVM_Transaction.h',
        'model/ssd/NVM_Transaction_Flash_ER.h',
        'model/ssd/NVM_Transaction_Flash_RD.h',
        'model/ssd/NVM_Transaction_Flash_WR.h',
        'model/ssd/NVM_Transaction_Flash.h',
        'model/ssd/ONFI_Channel_Base.h',
        'model/ssd/ONFI_Channel_NVDDR2.h',
        'model/ssd/Queue_Probe.h',
        'model/ssd/SSD_Defs.h',
        'model/ssd/Stats.h',
        'model/ssd/TSU_Base.h',
        'model/ssd/TSU_FLIN.h',
        'model/ssd/TSU_OutofOrder.h',
        'model/ssd/TSU_Priority_OutOfOrder.h',
        'model/ssd/User_Request.h',
        'model/ssd/Data_Cache_Flash.h',
        'model/host/PCIe_Switch.h',
        'model/host/PCIe_Link.h',
        'model/host/PCIe_Root_Complex.h',
        'model/exec/SSD_Device.h',
        'model/exec/Parameter_Set_Base.h',
        'model/exec/IO_Flow_Parameter_Set.h',
        'model/exec/Host_System.h',
        'model/exec/Host_Parameter_Set.h',
        'model/exec/Flash_Parameter_Set.h',
        'model/exec/Execution_Parameter_Set.h',
        'model/exec/Device_Parameter_Set.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()
